import React from "react";
import { StyleSheet, View, Text } from "react-native";
import PropTypse from "prop-types";
import { MaterialCommunityIcons } from "@expo/vector-icons";
import { LinearGradient } from "expo-linear-gradient";

const weatherOptions = {
  Haze: {
    iconName: "weather-hazy",
    gradient: ["#544a7d", "#ffd452"],
    title: "This is Title!",
    subtitle: "This is subTitle!",
  },
  Clouds: {
    iconName: "weather-cloudy",
    gradient: ["#274046", "#E6DADA"],
    title: "Íµ¨Î¶Ñ Í∞ÄÎìù ÎÇÄ ÌïòÎäò ‚òÅÔ∏è",
    subtitle: "Ïö∞Ï§ëÏ∂©ÌïòÎãàÍπå ÎßõÏûàÎäîÍ±∏ Î®πÏùçÏãúÎã§",
  },
  Clear: {
    iconName: "weather-sunny",
    gradient: ["#FDC830", "#F37335"],
    title: "ÌñáÎ≥ïÏùÄ Ï®çÏ®ç, Î™®ÎûòÏïåÏùÄ Î∞òÏßù ‚òÄÔ∏è",
    subtitle: "Í≤¨Ï£ºÎäî ÏÇ∞Ï±ÖÏùÑ ÎÇòÍ∞ëÎãàÎã§ Ïã§Ïãú",
  },
  Rain: {
    iconName: "weather-pouring",
    gradient: ["#076585", "#fff"],
    title: "Î∞ñÏóê ÎπÑÏò®Îã§ Ï£ºÎ•µÏ£ºÎ•µ ‚òîÔ∏è",
    subtitle: "ÎπóÍ∏∏ Ïö¥Ï†Ñ Ï°∞Ïã¨ Îòê Ï°∞Ïã¨",
  },
  Thunderstorm: {
    iconName: "weather-lightning",
    gradient: ["#1D4350", "#A43931"],
    title: "Î≤àÍ∞ú Ï°∞Ïã¨ ‚ö°Ô∏è",
    subtitle: "Î∞îÍπ•ÌôúÎèô ÏûêÏ†úÌïòÏÑ∏Ïöî!",
  },
  Drizzle: {
    iconName: "weather-rainy",
    gradient: ["#6190E8", "#A7BFE8"],
    title: "DrizzleÏùÄ Î≠òÍπåÏöî Ïä§ÌÉÄÎ≤ÖÏä§ ÎìúÎ¶¨Ï¶ê Ï∂îÍ∞ÄÎäî ÏïÑÎäîÎç∞..",
    subtitle: "Ìù†ÎÉêÎ§º~",
  },
  Snow: {
    iconName: "weather-snowy-heavy",
    gradient: ["#74ebd5", "#ACB6E5"],
    title: "Ï∞Ω Î∞ñÏùÑ Î≥¥Îùº Ï∞Ω Î∞ñÏùÑ Î≥¥Îùº Ìù∞ÎààÏù¥ ÎÇ¥Î¶∞Îã§ ‚òÉÔ∏è",
    subtitle: "ÎààÍ∏∏ Ïö¥Ï†Ñ Ï°∞Ïã¨ Îòê Ï°∞Ïã¨",
  },
  Smoke: {
    iconName: "weather-fog",
    gradient: ["#4e54c8", "#8f94fb"],
    title: "ÎßàÏä§ÌÅ¨Î•º ÎÇçÏãúÎã§ Î™®ÎëêÎì§",
    subtitle: "Who Want the Smoke?",
  },
  Mist: {
    iconName: "weather-rainy",
    gradient: ["#757f9a", "d7dde8"],
    title: "Î™∞Îùº Î∞∞Í≥†Ìåå",
    subtitle: "ÎßõÏûàÎäîÍ±∞ Î®πÏúºÏÑ∏Ïöî.",
  },
  Fog: {
    iconName: "weather-fog",
    gradient: ["#606c88", "#3f4c6b"],
    title: "ÏïàÍ∞úÍ∞Ä ÍºàÏùçÎãàÎã§üå´",
    subtitle: "Ï†ÑÎ∞© Ï£ºÏãú ÏïàÏ†ÑÍ±∞Î¶¨ ÌôïÎ≥¥",
  },
  Dust: {
    iconName: "weather-fog",
    gradient: ["#abbaab", "#ffffff"],
    title: "Î∞∞Í≥†ÌîàÎç∞?",
    subtitle: "Ïò§Îäò Ï†êÏã¨ÏùÄ ÏåÄÍµ≠Ïàò üçú",
  },
};

const getAirCondition = (pm2_5) => {
  if (pm2_5 < 16) {
    return (
      <Text style={styles.air}>
        ÎØ∏ÏÑ∏Î®ºÏßÄ Ï¢ãÏùå{" "}
        <MaterialCommunityIcons name="emoticon-excited-outline" size={20} />
      </Text>
    );
  } else if (pm2_5 > 15 && pm2_5 < 36) {
    return (
      <Text style={styles.air}>
        ÎØ∏ÏÑ∏Î®ºÏßÄ Î≥¥ÌÜµ{" "}
        <MaterialCommunityIcons name="emoticon-happy-outline" size={20} />
      </Text>
    );
  } else if (pm2_5 > 35 && pm2_5 < 76) {
    return (
      <Text style={styles.air}>
        ÎØ∏ÏÑ∏Î®ºÏßÄ ÎÇòÏÅ®{" "}
        <MaterialCommunityIcons name="emoticon-frown-outline" size={20} />
      </Text>
    );
  } else if (pm2_5 > 75) {
    return (
      <Text style={styles.air}>
        ÎØ∏ÏÑ∏Î®ºÏßÄ Îß§Ïö∞ÎÇòÏÅ®{" "}
        <MaterialCommunityIcons name="emoticon-angry-outline" size={20} />
      </Text>
    );
  } else {
    return (
      <Text style={styles.air}>
        ÎØ∏ÏÑ∏Î®ºÏßÄ Ï∏°Ï†ïÏ§ë{" "}
        <MaterialCommunityIcons name="emoticon-wink-outline" size={20} />
      </Text>
    );
  }
};

function Weather({ temp, condition, air }) {
  console.log("Weather.js : ", Math.round(air.components.pm2_5));
  return (
    <LinearGradient
      colors={weatherOptions[condition].gradient}
      style={styles.container}
    >
      <View style={styles.halfContainer}>
        <Text style={styles.condition}>{condition}</Text>
        <MaterialCommunityIcons
          name={weatherOptions[condition].iconName}
          size={96}
          color="white"
        />

        <Text style={styles.temp}>{temp}¬∫</Text>

        {getAirCondition(air.components.pm2_5)}
      </View>

      <View style={{ ...styles.halfContainer, ...styles.textWrap }}>
        <Text textBreakStrategy={"simple"} style={styles.title}>
          {weatherOptions[condition].title}
        </Text>
        <Text style={styles.subtitle}>
          {weatherOptions[condition].subtitle}
        </Text>
      </View>
    </LinearGradient>
  );
}
Weather.propTypes = {
  temp: PropTypse.number.isRequired,
  condition: PropTypse.oneOf([
    "Thunderstorm",
    "Drizzle",
    "Rain",
    "Snow",
    "Atmosphere",
    "Clear",
    "Clouds",
    "Haze",
    "Mist",
    "Fog",
    "Dust",
  ]).isRequired,
  air: PropTypse.object,
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  condition: {
    fontSize: 20,
    color: "white",
  },
  temp: {
    fontSize: 42,
    color: "white",
  },
  halfContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  title: {
    color: "white",
    fontSize: 40,
    fontWeight: "300",
    marginBottom: 10,
  },
  subtitle: {
    color: "white",
    fontWeight: "600",
    fontSize: 26,
  },
  textWrap: {
    paddingHorizontal: 10,
    alignItems: "flex-start",
  },
  air: {
    color: "white",
    fontWeight: "500",
    fontSize: 20,
  },
});
export default Weather;
